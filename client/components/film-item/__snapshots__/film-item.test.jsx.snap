// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FilmItem/> should render Film Item and match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilmItem
    fullLoad={[Function]}
    props={
      Object {
        "genres": Array [
          "Genre",
        ],
        "id": 123456,
        "match": Object {
          "params": Object {
            "id": 123456,
          },
        },
        "posterUrl": "PosterUrl",
        "title": "Title",
        "year": 1900,
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    user={
      Object {
        "fullItem": Object {
          "isActive": false,
        },
        "inputValue": "",
        "results": Object {
          "data": Array [],
        },
        "resultsCount": -1,
        "search": "title",
        "searchInfo": Object {},
        "sort": "releaseDate",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          src="test-file-stub"
        />,
        <div
          className="film-info"
        >
          <div>
            <Link
              onClick={[Function]}
              replace={false}
              to="/film/undefined"
            >
              <p
                className="title"
              />
            </Link>
            <p
              className="genre"
            />
          </div>
          <p
            className="year"
          />
        </div>,
      ],
      "className": "film-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "src": "test-file-stub",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <Link
                onClick={[Function]}
                replace={false}
                to="/film/undefined"
              >
                <p
                  className="title"
                />
              </Link>
              <p
                className="genre"
              />
            </div>,
            <p
              className="year"
            />,
          ],
          "className": "film-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  onClick={[Function]}
                  replace={false}
                  to="/film/undefined"
                >
                  <p
                    className="title"
                  />
                </Link>,
                <p
                  className="genre"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <p
                    className="title"
                  />,
                  "onClick": [Function],
                  "replace": false,
                  "to": "/film/undefined",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "genre",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "year",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            src="test-file-stub"
          />,
          <div
            className="film-info"
          >
            <div>
              <Link
                onClick={[Function]}
                replace={false}
                to="/film/undefined"
              >
                <p
                  className="title"
                />
              </Link>
              <p
                className="genre"
              />
            </div>
            <p
              className="year"
            />
          </div>,
        ],
        "className": "film-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": "test-file-stub",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <Link
                  onClick={[Function]}
                  replace={false}
                  to="/film/undefined"
                >
                  <p
                    className="title"
                  />
                </Link>
                <p
                  className="genre"
                />
              </div>,
              <p
                className="year"
              />,
            ],
            "className": "film-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/film/undefined"
                  >
                    <p
                      className="title"
                    />
                  </Link>,
                  <p
                    className="genre"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <p
                      className="title"
                    />,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/film/undefined",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": "title",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "genre",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "year",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<FilmItem/> should render Film Item without poster url and match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilmItem
    fullLoad={[Function]}
    props={
      Object {
        "genres": Array [
          "Genre",
        ],
        "id": 123456,
        "match": Object {
          "params": Object {
            "id": 123456,
          },
        },
        "title": "Title",
        "year": 1900,
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    user={
      Object {
        "fullItem": Object {
          "isActive": false,
        },
        "inputValue": "",
        "results": Object {
          "data": Array [],
        },
        "resultsCount": -1,
        "search": "title",
        "searchInfo": Object {},
        "sort": "releaseDate",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          src="test-file-stub"
        />,
        <div
          className="film-info"
        >
          <div>
            <Link
              onClick={[Function]}
              replace={false}
              to="/film/undefined"
            >
              <p
                className="title"
              />
            </Link>
            <p
              className="genre"
            />
          </div>
          <p
            className="year"
          />
        </div>,
      ],
      "className": "film-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "src": "test-file-stub",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <Link
                onClick={[Function]}
                replace={false}
                to="/film/undefined"
              >
                <p
                  className="title"
                />
              </Link>
              <p
                className="genre"
              />
            </div>,
            <p
              className="year"
            />,
          ],
          "className": "film-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  onClick={[Function]}
                  replace={false}
                  to="/film/undefined"
                >
                  <p
                    className="title"
                  />
                </Link>,
                <p
                  className="genre"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <p
                    className="title"
                  />,
                  "onClick": [Function],
                  "replace": false,
                  "to": "/film/undefined",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "genre",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "year",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            src="test-file-stub"
          />,
          <div
            className="film-info"
          >
            <div>
              <Link
                onClick={[Function]}
                replace={false}
                to="/film/undefined"
              >
                <p
                  className="title"
                />
              </Link>
              <p
                className="genre"
              />
            </div>
            <p
              className="year"
            />
          </div>,
        ],
        "className": "film-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": "test-file-stub",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <Link
                  onClick={[Function]}
                  replace={false}
                  to="/film/undefined"
                >
                  <p
                    className="title"
                  />
                </Link>
                <p
                  className="genre"
                />
              </div>,
              <p
                className="year"
              />,
            ],
            "className": "film-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/film/undefined"
                  >
                    <p
                      className="title"
                    />
                  </Link>,
                  <p
                    className="genre"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <p
                      className="title"
                    />,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/film/undefined",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": "title",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "genre",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "year",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
